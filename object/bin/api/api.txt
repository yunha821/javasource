API Documentaion
- API : Application Programming Interface
        라이브러리


- JAVA SE(Standard Edition) : 데스크탑 어플리케이션 개발
-      EE(Enterprise Edition) : 기업용 어플리케이션 개발 => 웹 개발

- 주요 클래스
1) 문자열 : String(+ StringBuffer)
2) 날짜/시간 :Date(java.util), LocalDate, LocalTime, LocalDateTime
3) 키보드 입력 : Scanner
4) 수학 : Math // 3), 4) 뒤로 갈수록 사용 잘 안함
5) 컬렉션 프레임워크 : 자료구조 개념이 적용된 클래스
                데이터를 저장하는 여러가지 다양한 방식의 클래스

Collection 인터페이스
        |
        |
        |
  List 인터페이스  Set 인터페이스

  Map 인터페이스

  List : 순서가 있는 데이터의 집합
        객체 형태로 담아온다 > 대문자로! List<Member> 
        중복 허용
        구현 클래스 - ArrayList, LinkedList, Stack, Vector...
        1) ArrayList == 배열
        2) LinkedList
            배열 구조의 단점
            - 크기 변경 불가 : 실행 속도의 향상을 위해서 큰 크기의 배열을 생성해야 함(메모리 낭비)
            - 비순차적인 데이터의 추가 또는 삭제에 시간이 많이 걸림
                  - 차례대로 데이터를 추가하고 마지막에서부터 데이터를 삭제하는 것은 빠름
                  - 배열의 중간에 데이터를 추가하기 위해 빈 자리를 만들고 다른 데이터를 복사해서 이동하는데 시간이 소요됨
        3) Stack 과 Queue
            - Stack : LIFO(Last in First Out)
            - Queue : FIFD(First in First Out)
      

  Set : 순서를 유지하지 않는 데이터 집합
        데이터 중복 허용하지 않음
        구현 클래스 - HashSet, TreeSet...
        Set - Interface
  
  Map : 키와 값의 쌍으로 이루어진 데이터 집합
        순서는 유지하지 않음
        키는 중복불가, 값을 중복 허용
        구현 클래스 - HashMap, TreeMap



Arrays : 배열을 다루는데 유요한 메소드가 정의되어 있음
      - Arrays.toString()
      - sort(), binarySearch()


Iterator : 컬레션에 저장된 요소 접근 시 사용
           컬렉션에 저장된 요소들을 읽어오는 방법 표준화
           구 버전으로 Enumeraiton
           hashNext() / next() / remove()




